 # GST 3.0 Application - Documentation

## Overview
GST 3.0 is an Angular-based application designed for GST (Goods and Services Tax) management in India. The application provides a comprehensive suite of tools for managing GST-related tasks, including challan generation, tracking, and reporting.

## Application Structure and Page Functionality

### Authentication Module

#### 1. Login Page (`/Logins`)
- **Component**: `login.component.ts`
- **Functionality**:
  - User authentication with username/password
  - Guest login functionality
  - CAPTCHA validation
  - Password encryption using SHA-256
  - IP address tracking for security
  - Session management with JWT token storage
  - Support for various user roles based on the authentication response

#### 2. Admin Login (`/admin`)
- **Component**: `admin-login.component.ts`
- **Functionality**:
  - Separate authentication for administrative users
  - Access to admin-specific reports and configurations

#### 3. Change Password (`/ChangePass`)
- **Component**: `change-pass.component.ts`
- **Functionality**:
  - Allows users to change their password
  - Password validation and secure update

#### 4. Reset Password (`/reset-pass`)
- **Component**: `reset-pass.component.ts`
- **Functionality**:
  - Password reset functionality for users who forgot their password
  - Security validation before allowing reset

### Main Application Pages

#### 5. Dashboard (`/dashboard`)
- **Component**: `dashboard.component.ts`
- **Functionality**:
  - Central hub with navigation to all system features
  - Quick access to frequently used functions
  - Summary statistics and metrics
  - User-specific dashboard based on role permissions
  - Announcements and notifications

#### 6. Create New Challan (`/NewChallan`)
- **Component**: `createnewchallan.component.ts`
- **Functionality**:
  - Form for creating new GST challans/vouchers
  - Multiple payment mode support
  - Budget head selection and mapping
  - Amount calculations with validation
  - Support for various GST payment types
  - Form data validation before submission
  - Generation of challan reference numbers

#### 7. Search/Track Challan (`/TrackChallan`)
- **Component**: `searchchallan.component.ts`
- **Functionality**:
  - Search for existing challans using various parameters
  - Track challan status and payment details
  - View complete challan history
  - Filter and sort options for efficient searching
  - Export search results in various formats

#### 8. Home (`/Home`)
- **Component**: `home.component.ts`
- **Functionality**:
  - Landing page after login
  - Overview of the system
  - Quick links to main functions
  - Latest news and updates

### GST Process Module

#### 9. GSTN Password Management (`/GSRNPassword`)
- **Component**: `gstnpassword.component.ts`
- **Functionality**:
  - Manage GSTN portal passwords
  - Update and reset credentials

#### 10. User Task Role Mapping (`/userTaskRoleMapping`)
- **Component**: `user-task-role-map.component.ts`
- **Functionality**:
  - Configure roles and assign tasks to users
  - Permission management
  - Role-based access control administration

#### 11. View Documents (`/View-Document`)
- **Component**: `view-document.component.ts`
- **Functionality**:
  - View uploaded GST-related documents
  - Filter and search documents
  - Download options for documents

#### 12. Create User (`/create-user`)
- **Component**: `create-user.component.ts`
- **Functionality**:
  - User account creation
  - Role assignment
  - User information management

#### 13. CPIN Pop Status (`/cpin-pop-status`)
- **Component**: `cpin-pop-status.component.ts`
- **Functionality**:
  - Check status of CPIN (Challan Identification Number) pop-up
  - Verify CPIN status with GSTN

### Master Data Management

#### 14. Master Data (`/master`)
- **Component**: `master.component.ts`
- **Functionality**:
  - Central hub for all master data management
  - Navigation to various master data configuration pages

#### 15. Bank List (`/master/bank-list`)
- **Component**: `bank-list.component.ts`
- **Functionality**:
  - Manage bank information for GST payments
  - Add, edit, and delete bank details

#### 16. Budget Head Mapping (`/master/budget-head-mapping-list`)
- **Component**: `budget-head-mapping-list.component.ts`
- **Functionality**:
  - Configure and map budget heads for GST
  - Manage accounting codes for different GST components

#### 17. Payment Modes (`/master/payment-modes`)
- **Component**: `payment-modes.component.ts`
- **Functionality**:
  - Configure available payment modes
  - Enable/disable specific payment methods

### Reports Module

#### 18. Consolidate Data (`/ConsolidateData`)
- **Component**: `consolidate-data.component.ts`
- **Functionality**:
  - Consolidated reports of GST collections
  - Summary statistics across different parameters

#### 19. CIN Data Reports (`/CinData`)
- **Component**: `cin-data-reports.component.ts`
- **Functionality**:
  - Reports related to Challan Identification Numbers (CIN)
  - Track payments based on CIN

#### 20. CPIN Reports (`/CpinReports`)
- **Component**: `cpin-reports.component.ts`
- **Functionality**:
  - Reports for Challan Provisional Identification Numbers (CPIN)
  - Monitoring CPIN generation and usage

#### 21. EOD (End of Day) Reports
- **CPIN EOD** (`/EodCpin`): `eod-cpin.component.ts`
- **CIN EOD** (`/EodCin`): `eod-cin.component.ts`
- **Functionality**:
  - End of day summary reports
  - Daily reconciliation of CPIN/CIN data

#### 22. Error Reports
- **Error Log** (`/ErrorLog`): `error-log.component.ts`
- **File Error Log** (`/FileErrorLog`): `file-error-log.component.ts`
- **All Error Report** (`/all-error-report`): `all-error-report.component.ts`
- **Reporting Error File Log** (`/ReportingErrorFileLog`): `reporting-error-file-log.component.ts`
- **Functionality**:
  - Track and analyze system errors
  - File upload/processing error logs
  - Detailed error reporting for troubleshooting

#### 23. GST Analysis Reports
- **GST Account Statement** (`/GSTAccountStatement`): `gst-account-statement.component.ts`
- **GST RBI Data Analysis** (`/GstRbiDataAnalysis`): `gst-rbi-data-analysis.component.ts`
- **GST AG Reports** (`/GSTAGReports`): `gst-ag-reports.component.ts`
- **GST Settlement** (`/GstSettlement`): `gst-settlement.component.ts`
- **Functionality**:
  - Detailed GST collection analysis
  - RBI data reconciliation
  - Accounting reports for Accountant General
  - Settlement records and reports

#### 24. Mismatch Reports
- **ASCN Mismatch** (`/ASCNMismatch`): `ascn-mismatch.component.ts`
- **MOE Mismatch** (`/MOEMatch`): `moe-mismatch.component.ts`
- **Mismatch Data** (`/MismatchData`): `mismatch-data.component.ts`
- **Functionality**:
  - Identify and report data mismatches
  - Reconciliation tools for resolving discrepancies

#### 25. GSTN Related Reports
- **Track GSTN** (`/TrackGSTN`): `track-gstn.component.ts`
- **GSTN Data** (`/GSTNData`): `gstn-data.component.ts`
- **GSTN Record Count** (`/GSTNRecordCount`): `gstn-record-count.component.ts`
- **GSTIN Search** (`/GstinSearch`): `gstin-search.component.ts`
- **Functionality**:
  - Track data exchange with GSTN
  - Search and validate GSTIN (GST Identification Numbers)
  - Statistical reports on GSTN data

#### 26. RBI Related Reports
- **RBI Comparison** (`/RbiComparision`): `rbi-comparision.component.ts`
- **E-Kuber** (`/Ekuber`): `e-kuber.component.ts`
- **Absent RBI** (`/AbsentRBI`): `absent-rbi.component.ts`
- **Functionality**:
  - Reports comparing GST data with RBI records
  - E-Kuber (RBI's Core Banking Solution) integration reports
  - Identify missing RBI data

#### 27. Miscellaneous Reports
- **Daily Look Up** (`/DailyLookUp`): `daily-look-up.component.ts`
- **Daily Look Up Details** (`/DailyLookUpDetails`): `daily-look-up-details.component.ts`
- **At a Glance Amount** (`/AtaGlanceAmount`): `ata-glance-amount.component.ts`
- **At a Glance Amount Details** (`/AtaGlanceAmountDetails`): `ata-glance-amount-details.component.ts`
- **Diff Report Date** (`/DiffRptLate`): `diff-report-date.component.ts`
- **Generated Challan Data** (`/GeneratedChallanData`): `generated-challan-data.component.ts`
- **CIN Reported After MOE** (`/CinReportedAfterMOE`): `cin-reported-after-moe.component.ts`
- **MOE Data** (`/MOEData`): `moe-data.component.ts`
- **Functionality**:
  - Daily summary reports
  - Quick overview reports for key metrics
  - Date-wise differential reports
  - Challan generation statistics

### Utility Components

#### 28. Generate Challan (`/generate-challan`)
- **Component**: `generate-challan.component.ts`
- **Functionality**:
  - Automated challan generation based on predefined templates
  - Bulk challan generation capabilities

#### 29. Common Dialog
- **Component**: `common-dialog.component.ts`
- **Functionality**:
  - Reusable dialog component for notifications and confirmations
  - Standardized user interaction patterns

#### 30. Star Canvas
- **Component**: `star-canvas.component.ts`
- **Functionality**:
  - Visual rating component
  - Feedback collection mechanism

## Core Services

### 1. API Methods (`ApiMethods` service)
- Handles all API interactions
- Manages IP address tracking
- Implements authentication token handling
- Provides methods for various API calls

### 2. Common Service (`CommonService`)
- Central service for shared functionality
- User session management
- IP monitoring and validation
- Utility functions for date handling, encryption/decryption
- Export functionality (PDF/Excel)
- Toast notifications

### 3. Dynamic Route Service (`DynamicRouteService`)
- Dynamically loads routes based on user permissions
- Configures route access based on roles
- Updates navigation options based on user permissions

### 4. Data Service (`DataService`)
- Handles data sharing between components
- State management for application data

## Security Features

### 1. Authentication Guard (`AuthGuard`)
- Route protection based on authentication status
- Redirects unauthenticated users to login page

### 2. Interceptors
- **Auth Interceptor**: Attaches authentication tokens to requests
- **IP Check Interceptor**: Validates IP address for security

### 3. Session Management
- JWT token-based authentication
- Session timeout handling
- Secure storage of credentials

## Technical Details

### 1. Key Technologies
- Angular framework
- TypeScript
- RxJS for reactive programming
- Angular Material for UI components
- PDF and Excel export capabilities

### 2. Data Handling
- Form validation with Angular Reactive Forms
- Data encryption for sensitive information
- File uploads with drag-and-drop support

### 3. Responsive Design
- Mobile-friendly interface
- Adaptive layouts for different screen sizes

## Conclusion
The GST 3.0 application provides a comprehensive solution for GST management, offering tools for challan generation, tracking, reporting, and administration. The modular architecture allows for easy maintenance and extension of functionality, while the role-based access control ensures secure and appropriate access to the system's features. 